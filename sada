#!/usr/bin/env python2
#
#


import json
import os
import commands
import sys

base = os.getenv('HOME') + "/usr/var/sada"

try:
	bs=os.stat(base)
except:
	os.popen("mkdir -p " + base)

#if we get nothing list all buckets
try:
	bucket = sys.argv[1]
except:
	for dirname in os.listdir(base):
		print(dirname)
	exit()


#If we are not given a key list all keys in the bucket
try:
	key = sys.argv[2].replace("/","_").strip()
except:
	#If bucket dosent exist, exit silently
	if not os.path.isdir( base + "/" + bucket):
		exit()
	for dirname in os.listdir(base + "/" + bucket):
		print(dirname)
	exit()
	

datafile=base + "/" + bucket + "/" + key
if len(sys.argv) == 4:
	#Write mode
	value = sys.argv[3] 
	try:
		bs=os.stat(base + "/" + bucket)
	except:
		os.popen("mkdir " + base + "/" + bucket)
	try:
		fh=open(datafile)
		data=json.loads(fh.read())
		fh.close()
	except:
		data={}
	try:
		if data['value'] != value:
			try:
				#Move currenty value to front of history
				data['history'].insert(0, data['value'])
				data['value'] = value
			except:
				#If we throw here we need to init history
				data['history'] = []
				data['history'].insert(0, data['value'])
				data['value'] = value
	except:
		#If we throw here we need to initalize the data
		data['value'] = value
		data['history'] = []
	fh=open(datafile, "w")
	fh.writelines(json.dumps(data, sort_keys=True, indent=4) + "\n" )
	fh.close()
	print(bucket + " " + key + " " +  value)


elif len(sys.argv) == 3:
	#read mode
	try:
		fh=open(datafile)
		data=json.loads(fh.read())
		fh.close()
		print(bucket + " " + key + " " +  data['value'])
	except:
		print(bucket + " " + key + "  ")
else:
	print("syntax error")
